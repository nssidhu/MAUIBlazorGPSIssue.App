@page "/"

@inject NavigationManager _nav

<h1>Get Location using Native API</h1>

Latitude : @latitude
<br/>
Longitude : @longitude
<br/>
<button @onclick="GetPosition">Get Position</button>
<br />
 @errorMessage
<br />
<br />





<br/>
<button @onclick="@(()=>_nav.NavigateTo("/JavaScriptGoogleMap"))" >JavaScript Google Map</button>
<br />
<button @onclick="@(()=>_nav.NavigateTo("/ScanCode"))">Scan QrCode</button>

@code{

    string latitude="";
    string longitude = "";
    string errorMessage = "";

    private CancellationTokenSource _cancelTokenSource;

    async void  GetPosition()
    {
        try
        {
            latitude = "";
            longitude = "";
            errorMessage = "Getting Location, Please wait........";
            StateHasChanged();
            GeolocationRequest request = new GeolocationRequest(GeolocationAccuracy.Medium, TimeSpan.FromSeconds(10));

            _cancelTokenSource = new CancellationTokenSource();

            Location location = await Geolocation.Default.GetLocationAsync(request, _cancelTokenSource.Token);

            if(location!= null)
            {
                latitude = location.Latitude.ToString();
                longitude = location.Longitude.ToString();
                errorMessage = "";
                StateHasChanged();
            }
        }
        catch (FeatureNotSupportedException fnsEx)
        {
            // Handle not supported on device exception
            errorMessage = fnsEx.Message;
        }
        catch (FeatureNotEnabledException fneEx)
        {
            // Handle not enabled on device exception
            errorMessage = fneEx.Message;
        }
        catch (PermissionException pEx)
        {
            // Handle permission exception
            errorMessage = pEx.Message;
        }
        catch (Exception)
        {
            
            throw;
        }
       
    }

}